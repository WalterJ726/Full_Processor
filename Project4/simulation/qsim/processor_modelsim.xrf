vendor_name = ModelSim
source_file = 1, E:/Duke_Materials/22fall/550/Labs/Project4/skeleton_tb.v
source_file = 1, E:/Duke_Materials/22fall/550/Labs/Project4/processor.v
source_file = 1, E:/Duke_Materials/22fall/550/Labs/Project4/pc.v
source_file = 1, E:/Duke_Materials/22fall/550/Labs/Project4/extend.v
source_file = 1, E:/Duke_Materials/22fall/550/Labs/Project4/Mux_1.v
source_file = 1, E:/Duke_Materials/22fall/550/Labs/Project4/Mux_16.v
source_file = 1, E:/Duke_Materials/22fall/550/Labs/Project4/RCA.v
source_file = 1, E:/Duke_Materials/22fall/550/Labs/Project4/ripple_carry_adder_4b.v
source_file = 1, E:/Duke_Materials/22fall/550/Labs/Project4/regfile.v
source_file = 1, E:/Duke_Materials/22fall/550/Labs/Project4/CSA.v
source_file = 1, E:/Duke_Materials/22fall/550/Labs/Project4/alu.v
source_file = 1, E:/Duke_Materials/22fall/550/Labs/Project4/insn_decoder.v
source_file = 1, E:/Duke_Materials/22fall/550/Labs/Project4/dffe_ref.v
source_file = 1, E:/Duke_Materials/22fall/550/Labs/Project4/frequency_divider.v
source_file = 1, E:/Duke_Materials/22fall/550/Labs/Project4/full_adder.v
source_file = 1, E:/Duke_Materials/22fall/550/Labs/Project4/skeleton.v
source_file = 1, E:/Duke_Materials/22fall/550/Labs/Project4/imem.v
source_file = 1, E:/Duke_Materials/22fall/550/Labs/Project4/imem.qip
source_file = 1, E:/Duke_Materials/22fall/550/Labs/Project4/dmem.v
source_file = 1, E:/Duke_Materials/22fall/550/Labs/Project4/dmem.qip
source_file = 1, E:/Duke_Materials/22fall/550/Labs/Project4/Waveform3.vwf
source_file = 1, E:/Duke_Materials/22fall/550/Labs/Project4/pc_tb.v
source_file = 1, E:/Duke_Materials/22fall/550/Labs/Project4/db/processor.cbx.xml
design_name = pc
instance = comp, \q[0]~output , q[0]~output, pc, 1
instance = comp, \q[1]~output , q[1]~output, pc, 1
instance = comp, \q[2]~output , q[2]~output, pc, 1
instance = comp, \q[3]~output , q[3]~output, pc, 1
instance = comp, \q[4]~output , q[4]~output, pc, 1
instance = comp, \q[5]~output , q[5]~output, pc, 1
instance = comp, \q[6]~output , q[6]~output, pc, 1
instance = comp, \q[7]~output , q[7]~output, pc, 1
instance = comp, \q[8]~output , q[8]~output, pc, 1
instance = comp, \q[9]~output , q[9]~output, pc, 1
instance = comp, \q[10]~output , q[10]~output, pc, 1
instance = comp, \q[11]~output , q[11]~output, pc, 1
instance = comp, \q[12]~output , q[12]~output, pc, 1
instance = comp, \q[13]~output , q[13]~output, pc, 1
instance = comp, \q[14]~output , q[14]~output, pc, 1
instance = comp, \q[15]~output , q[15]~output, pc, 1
instance = comp, \q[16]~output , q[16]~output, pc, 1
instance = comp, \q[17]~output , q[17]~output, pc, 1
instance = comp, \q[18]~output , q[18]~output, pc, 1
instance = comp, \q[19]~output , q[19]~output, pc, 1
instance = comp, \q[20]~output , q[20]~output, pc, 1
instance = comp, \q[21]~output , q[21]~output, pc, 1
instance = comp, \q[22]~output , q[22]~output, pc, 1
instance = comp, \q[23]~output , q[23]~output, pc, 1
instance = comp, \q[24]~output , q[24]~output, pc, 1
instance = comp, \q[25]~output , q[25]~output, pc, 1
instance = comp, \q[26]~output , q[26]~output, pc, 1
instance = comp, \q[27]~output , q[27]~output, pc, 1
instance = comp, \q[28]~output , q[28]~output, pc, 1
instance = comp, \q[29]~output , q[29]~output, pc, 1
instance = comp, \q[30]~output , q[30]~output, pc, 1
instance = comp, \q[31]~output , q[31]~output, pc, 1
instance = comp, \clk~input , clk~input, pc, 1
instance = comp, \clk~inputclkctrl , clk~inputclkctrl, pc, 1
instance = comp, \d[0]~input , d[0]~input, pc, 1
instance = comp, \dffe_loop[0].my_dffe|q~feeder , dffe_loop[0].my_dffe|q~feeder, pc, 1
instance = comp, \clr~input , clr~input, pc, 1
instance = comp, \clr~inputclkctrl , clr~inputclkctrl, pc, 1
instance = comp, \en~input , en~input, pc, 1
instance = comp, \dffe_loop[0].my_dffe|q , dffe_loop[0].my_dffe|q, pc, 1
instance = comp, \d[1]~input , d[1]~input, pc, 1
instance = comp, \dffe_loop[1].my_dffe|q~feeder , dffe_loop[1].my_dffe|q~feeder, pc, 1
instance = comp, \dffe_loop[1].my_dffe|q , dffe_loop[1].my_dffe|q, pc, 1
instance = comp, \d[2]~input , d[2]~input, pc, 1
instance = comp, \dffe_loop[2].my_dffe|q , dffe_loop[2].my_dffe|q, pc, 1
instance = comp, \d[3]~input , d[3]~input, pc, 1
instance = comp, \dffe_loop[3].my_dffe|q , dffe_loop[3].my_dffe|q, pc, 1
instance = comp, \d[4]~input , d[4]~input, pc, 1
instance = comp, \dffe_loop[4].my_dffe|q~feeder , dffe_loop[4].my_dffe|q~feeder, pc, 1
instance = comp, \dffe_loop[4].my_dffe|q , dffe_loop[4].my_dffe|q, pc, 1
instance = comp, \d[5]~input , d[5]~input, pc, 1
instance = comp, \dffe_loop[5].my_dffe|q , dffe_loop[5].my_dffe|q, pc, 1
instance = comp, \d[6]~input , d[6]~input, pc, 1
instance = comp, \dffe_loop[6].my_dffe|q~feeder , dffe_loop[6].my_dffe|q~feeder, pc, 1
instance = comp, \dffe_loop[6].my_dffe|q , dffe_loop[6].my_dffe|q, pc, 1
instance = comp, \d[7]~input , d[7]~input, pc, 1
instance = comp, \dffe_loop[7].my_dffe|q , dffe_loop[7].my_dffe|q, pc, 1
instance = comp, \d[8]~input , d[8]~input, pc, 1
instance = comp, \dffe_loop[8].my_dffe|q~feeder , dffe_loop[8].my_dffe|q~feeder, pc, 1
instance = comp, \dffe_loop[8].my_dffe|q , dffe_loop[8].my_dffe|q, pc, 1
instance = comp, \d[9]~input , d[9]~input, pc, 1
instance = comp, \dffe_loop[9].my_dffe|q~feeder , dffe_loop[9].my_dffe|q~feeder, pc, 1
instance = comp, \dffe_loop[9].my_dffe|q , dffe_loop[9].my_dffe|q, pc, 1
instance = comp, \d[10]~input , d[10]~input, pc, 1
instance = comp, \dffe_loop[10].my_dffe|q~feeder , dffe_loop[10].my_dffe|q~feeder, pc, 1
instance = comp, \dffe_loop[10].my_dffe|q , dffe_loop[10].my_dffe|q, pc, 1
instance = comp, \d[11]~input , d[11]~input, pc, 1
instance = comp, \dffe_loop[11].my_dffe|q~feeder , dffe_loop[11].my_dffe|q~feeder, pc, 1
instance = comp, \dffe_loop[11].my_dffe|q , dffe_loop[11].my_dffe|q, pc, 1
instance = comp, \d[12]~input , d[12]~input, pc, 1
instance = comp, \dffe_loop[12].my_dffe|q~feeder , dffe_loop[12].my_dffe|q~feeder, pc, 1
instance = comp, \dffe_loop[12].my_dffe|q , dffe_loop[12].my_dffe|q, pc, 1
instance = comp, \d[13]~input , d[13]~input, pc, 1
instance = comp, \dffe_loop[13].my_dffe|q~feeder , dffe_loop[13].my_dffe|q~feeder, pc, 1
instance = comp, \dffe_loop[13].my_dffe|q , dffe_loop[13].my_dffe|q, pc, 1
instance = comp, \d[14]~input , d[14]~input, pc, 1
instance = comp, \dffe_loop[14].my_dffe|q~feeder , dffe_loop[14].my_dffe|q~feeder, pc, 1
instance = comp, \dffe_loop[14].my_dffe|q , dffe_loop[14].my_dffe|q, pc, 1
instance = comp, \d[15]~input , d[15]~input, pc, 1
instance = comp, \dffe_loop[15].my_dffe|q , dffe_loop[15].my_dffe|q, pc, 1
instance = comp, \d[16]~input , d[16]~input, pc, 1
instance = comp, \dffe_loop[16].my_dffe|q~feeder , dffe_loop[16].my_dffe|q~feeder, pc, 1
instance = comp, \dffe_loop[16].my_dffe|q , dffe_loop[16].my_dffe|q, pc, 1
instance = comp, \d[17]~input , d[17]~input, pc, 1
instance = comp, \dffe_loop[17].my_dffe|q~feeder , dffe_loop[17].my_dffe|q~feeder, pc, 1
instance = comp, \dffe_loop[17].my_dffe|q , dffe_loop[17].my_dffe|q, pc, 1
instance = comp, \d[18]~input , d[18]~input, pc, 1
instance = comp, \dffe_loop[18].my_dffe|q~feeder , dffe_loop[18].my_dffe|q~feeder, pc, 1
instance = comp, \dffe_loop[18].my_dffe|q , dffe_loop[18].my_dffe|q, pc, 1
instance = comp, \d[19]~input , d[19]~input, pc, 1
instance = comp, \dffe_loop[19].my_dffe|q~feeder , dffe_loop[19].my_dffe|q~feeder, pc, 1
instance = comp, \dffe_loop[19].my_dffe|q , dffe_loop[19].my_dffe|q, pc, 1
instance = comp, \d[20]~input , d[20]~input, pc, 1
instance = comp, \dffe_loop[20].my_dffe|q~feeder , dffe_loop[20].my_dffe|q~feeder, pc, 1
instance = comp, \dffe_loop[20].my_dffe|q , dffe_loop[20].my_dffe|q, pc, 1
instance = comp, \d[21]~input , d[21]~input, pc, 1
instance = comp, \dffe_loop[21].my_dffe|q~feeder , dffe_loop[21].my_dffe|q~feeder, pc, 1
instance = comp, \dffe_loop[21].my_dffe|q , dffe_loop[21].my_dffe|q, pc, 1
instance = comp, \d[22]~input , d[22]~input, pc, 1
instance = comp, \dffe_loop[22].my_dffe|q~feeder , dffe_loop[22].my_dffe|q~feeder, pc, 1
instance = comp, \dffe_loop[22].my_dffe|q , dffe_loop[22].my_dffe|q, pc, 1
instance = comp, \d[23]~input , d[23]~input, pc, 1
instance = comp, \dffe_loop[23].my_dffe|q~feeder , dffe_loop[23].my_dffe|q~feeder, pc, 1
instance = comp, \dffe_loop[23].my_dffe|q , dffe_loop[23].my_dffe|q, pc, 1
instance = comp, \d[24]~input , d[24]~input, pc, 1
instance = comp, \dffe_loop[24].my_dffe|q~feeder , dffe_loop[24].my_dffe|q~feeder, pc, 1
instance = comp, \dffe_loop[24].my_dffe|q , dffe_loop[24].my_dffe|q, pc, 1
instance = comp, \d[25]~input , d[25]~input, pc, 1
instance = comp, \dffe_loop[25].my_dffe|q~feeder , dffe_loop[25].my_dffe|q~feeder, pc, 1
instance = comp, \dffe_loop[25].my_dffe|q , dffe_loop[25].my_dffe|q, pc, 1
instance = comp, \d[26]~input , d[26]~input, pc, 1
instance = comp, \dffe_loop[26].my_dffe|q~feeder , dffe_loop[26].my_dffe|q~feeder, pc, 1
instance = comp, \dffe_loop[26].my_dffe|q , dffe_loop[26].my_dffe|q, pc, 1
instance = comp, \d[27]~input , d[27]~input, pc, 1
instance = comp, \dffe_loop[27].my_dffe|q~feeder , dffe_loop[27].my_dffe|q~feeder, pc, 1
instance = comp, \dffe_loop[27].my_dffe|q , dffe_loop[27].my_dffe|q, pc, 1
instance = comp, \d[28]~input , d[28]~input, pc, 1
instance = comp, \dffe_loop[28].my_dffe|q , dffe_loop[28].my_dffe|q, pc, 1
instance = comp, \d[29]~input , d[29]~input, pc, 1
instance = comp, \dffe_loop[29].my_dffe|q~feeder , dffe_loop[29].my_dffe|q~feeder, pc, 1
instance = comp, \dffe_loop[29].my_dffe|q , dffe_loop[29].my_dffe|q, pc, 1
instance = comp, \d[30]~input , d[30]~input, pc, 1
instance = comp, \dffe_loop[30].my_dffe|q~feeder , dffe_loop[30].my_dffe|q~feeder, pc, 1
instance = comp, \dffe_loop[30].my_dffe|q , dffe_loop[30].my_dffe|q, pc, 1
instance = comp, \d[31]~input , d[31]~input, pc, 1
instance = comp, \dffe_loop[31].my_dffe|q , dffe_loop[31].my_dffe|q, pc, 1
design_name = hard_block
instance = comp, \~ALTERA_ASDO_DATA1~~ibuf , ~ALTERA_ASDO_DATA1~~ibuf, hard_block, 1
instance = comp, \~ALTERA_FLASH_nCE_nCSO~~ibuf , ~ALTERA_FLASH_nCE_nCSO~~ibuf, hard_block, 1
instance = comp, \~ALTERA_DATA0~~ibuf , ~ALTERA_DATA0~~ibuf, hard_block, 1
